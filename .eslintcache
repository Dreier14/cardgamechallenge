[{"/Users/adamdreier/dev/card-game-challenge/src/reportWebVitals.js":"1","/Users/adamdreier/dev/card-game-challenge/src/Components/LandingPage/LandingPage.js":"2","/Users/adamdreier/dev/card-game-challenge/src/routes.js":"3","/Users/adamdreier/dev/card-game-challenge/src/index.js":"4","/Users/adamdreier/dev/card-game-challenge/src/App.js":"5","/Users/adamdreier/dev/card-game-challenge/src/Components/CardComponent/CardComponent.js":"6","/Users/adamdreier/dev/card-game-challenge/src/Components/WinComponent/WinComponent.js":"7"},{"size":362,"mtime":1611558801405,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1612046277311,"results":"10","hashOfConfig":"9"},{"size":294,"mtime":1611560184764,"results":"11","hashOfConfig":"9"},{"size":584,"mtime":1611561762092,"results":"12","hashOfConfig":"9"},{"size":186,"mtime":1611562487135,"results":"13","hashOfConfig":"9"},{"size":4185,"mtime":1612046922241,"results":"14","hashOfConfig":"9"},{"size":237,"mtime":1612046136278,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18obdbq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adamdreier/dev/card-game-challenge/src/reportWebVitals.js",[],"/Users/adamdreier/dev/card-game-challenge/src/Components/LandingPage/LandingPage.js",["34"],"/Users/adamdreier/dev/card-game-challenge/src/routes.js",["35"],"import React, { Component } from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport LandingPage from './Components/LandingPage/LandingPage';\n\nexport default\n         (\n        <Switch>\n           <Route exact path='/' component={ LandingPage }/> \n        </Switch>\n        );\n    \n",["36","37"],"/Users/adamdreier/dev/card-game-challenge/src/index.js",[],"/Users/adamdreier/dev/card-game-challenge/src/App.js",["38"],"import logo from './logo.svg';\nimport './App.css';\nimport routes from \"./routes\";\n\nfunction App() {\n  return (\n      <div>\n      {routes}\n      </div>\n      \n  );\n}\n\nexport default App;\n",["39","40"],"/Users/adamdreier/dev/card-game-challenge/src/Components/CardComponent/CardComponent.js",["41","42"],"/Users/adamdreier/dev/card-game-challenge/src/Components/WinComponent/WinComponent.js",[],{"ruleId":"43","severity":1,"message":"44","line":6,"column":1,"nodeType":"45","endLine":17,"endColumn":2},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"50","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":24,"column":28,"nodeType":"59","endLine":24,"endColumn":38},{"ruleId":"57","severity":1,"message":"58","line":83,"column":31,"nodeType":"59","endLine":83,"endColumn":41},"import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'logo' is defined but never used.",["60"],["61"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]